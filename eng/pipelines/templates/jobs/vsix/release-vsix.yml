parameters:
- name: ServerName
  type: string
- name: DependsOn
  type: object
- name: VsixTargets
  type: object
  default:
    - linux-x64
    - linux-arm64
    - macos-x64
    - macos-arm64
    - windows-x64
    - windows-arm64


jobs:
# Deployment Jobs: Publish VSIX artifacts to Marketplace for each vsix target
- ${{ each VsixTarget in parameters.VsixTargets }}:
  - deployment: PublishVSIX_${{ replace(VsixTarget, '-', '_') }}
    displayName: "Publish VSIX Artifact to Marketplace - ${{ VsixTarget }}"
    dependsOn: ${{ parameters.DependsOn }}
    condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))
    templateContext:
      type: releaseJob
      isProduction: true
      inputs:
      - input: pipelineArtifact
        artifactName: packages_vsix_signed
        targetPath: $(Pipeline.Workspace)/drop
      - input: pipelineArtifact
        artifactName: build_info
        targetPath: $(Pipeline.Workspace)/build_info
    environment: package-publish
    pool:
      name: azsdk-pool
      image: ubuntu-24.04
      os: linux
    strategy:
      runOnce:
        deploy:
          steps:
          - pwsh: |
              $buildInfoPath = "$(Pipeline.Workspace)/build_info/build_info.json"
              $buildInfo = Get-Content $buildInfoPath -Raw | ConvertFrom-Json
              $server = $buildInfo.servers | Where-Object { $_.name -eq '${{ parameters.ServerName }}' }
              $prereleaseArg = $server.vsixIsPrerelease ? "--pre-release" : ""
              Write-Host "Server: $($server.name), Version: $($server.version), VSIX Version: $($server.vsixVersion), Is Prerelease: $($server.vsixIsPrerelease)"
              Write-Host "Prerelease argument: '$prereleaseArg'"
              Write-Host "##vso[task.setvariable variable=prereleaseArg]$prereleaseArg"
            displayName: Determine prerelease flag from build_info
          
          - task: AzureCLI@2
            displayName: "Publish (using vsce) - ${{ VsixTarget }}"
            inputs:
              azureSubscription: azure-sdk-vsmarketplace
              scriptType: pscore
              scriptLocation: inlineScript
              workingDirectory: $(Pipeline.Workspace)/drop/${{ parameters.ServerName }}/${{ VsixTarget }}
              inlineScript: |
                Write-Host "Publishing VSIX for ${{ VsixTarget }}"
                
                $baseName = Get-ChildItem *.vsix | Select-Object -ExpandProperty BaseName -First 1
                Write-Host "VSIX baseName: $baseName"
                Write-Host "Prerelease argument: '$(prereleaseArg)'"
                
                npm install -g @vscode/vsce
                
                if ("$(prereleaseArg)" -ne "") {
                    $publishCmd = "vsce publish --azure-credential --packagePath `"$baseName.vsix`" --manifestPath `"$baseName.manifest`" --signaturePath `"$baseName.signature.p7s`" --pre-release"
                    Write-Host "Executing: $publishCmd"
                    vsce publish --azure-credential --packagePath "$baseName.vsix" --manifestPath "$baseName.manifest" --signaturePath "$baseName.signature.p7s" --pre-release
                } else {
                    $publishCmd = "vsce publish --azure-credential --packagePath `"$baseName.vsix`" --manifestPath `"$baseName.manifest`" --signaturePath `"$baseName.signature.p7s`""
                    Write-Host "Executing: $publishCmd"
                    vsce publish --azure-credential --packagePath "$baseName.vsix" --manifestPath "$baseName.manifest" --signaturePath "$baseName.signature.p7s"
                }
