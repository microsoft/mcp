jobs:
- job: Sign
  timeoutInMinutes: 120
  pool: # Binary signing of mac bits needs to happen on mac see https://github.com/Azure/azure-mcp/blob/4ff032fafc77bc618738879b7028665c0de2e632/eng/scripts/Compress-ForSigning.ps1#L40
    name: $(MACPOOL)
    vmImage: $(MACVMIMAGE)
    os: macos
  steps:
  - checkout: self

  - download: current
    displayName: Download artifacts

  - task: Powershell@2
    displayName: "Stage files for signing"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Compress-ForSigning.ps1
      arguments: >
        -BuildInfoPath '$(Pipeline.Workspace)/build_info/build_info.json'
        -ArtifactsPath '$(Pipeline.Workspace)'
        -ArtifactPrefix 'binaries_'
        -OutputPath '$(Build.ArtifactStagingDirectory)/signed'

  - template: pipelines/steps/binary-signing.yml@azure-sdk-build-tools
    parameters:
      SigningKeyCode: 'CP-230012' # MS Cert
      BinaryPath: $(Build.ArtifactStagingDirectory)/signed
      BinaryPattern: |
        **/windows-*/**/azmcp.dll
        **/windows-*/**/azmcp.exe
        **/windows-*/**/mcptmp.dll
        **/windows-*/**/mcptmp.exe
        **/windows-*/**/*.Mcp.*.dll

  - template: pipelines/steps/binary-signing.yml@azure-sdk-build-tools
    parameters:
      SigningKeyCode: 'CP-231522' # MS 3rd Party Cert
      BinaryPath: $(Build.ArtifactStagingDirectory)/signed
      BinaryPattern: |
        **/windows-*/**/ModelContextProtocol*.dll
        **/windows-*/**/Newtonsoft.Json.dll
        **/windows-*/**/Npgsql.dll
        **/windows-*/**/OpenAI.dll
        **/windows-*/**/OpenTelemetry*.dll
        **/windows-*/**/YamlDotNet.dll

  - template: pipelines/steps/azd-cli-mac-signing.yml@azure-sdk-build-tools
    parameters:
      MacPath: $(Build.ArtifactStagingDirectory)/signed
      MacPattern: "**/*.zip"

  - task: Powershell@2
    displayName: "Expand Mac executables after signing"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Expand-AfterSigning.ps1
      arguments: >
        -Path '$(Build.ArtifactStagingDirectory)/signed'

  - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
    parameters:
      ArtifactPath: $(Build.ArtifactStagingDirectory)/signed
      ArtifactName: binaries_signed

  - task: Powershell@2
    displayName: "Pack binaries into zip files"
    inputs:
      pwsh: true
      filePath: $(Build.SourcesDirectory)/eng/scripts/Pack-Zip.ps1
      arguments: >
        -ArtifactsPath '$(Build.ArtifactStagingDirectory)/signed'
        -OutputPath '$(Build.ArtifactStagingDirectory)/zipped'
        -BuildInfoPath '$(Pipeline.Workspace)/build_info/build_info.json'

  - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
    parameters:
      ArtifactPath: $(Build.ArtifactStagingDirectory)/zipped
      ArtifactName: binaries_signed_zipped

- job: Verify_Signing
  displayName: "Verify Signing"
  dependsOn: Sign
  pool:
    name: $(WINDOWSPOOL) # Signing verification must happen on windows
    image: $(WINDOWSVMIMAGE)
    os: windows
  variables:
  - template: /eng/pipelines/templates/variables/image.yml
  - template: /eng/pipelines/templates/variables/globals.yml
  steps:
  - checkout: none

  - download: current
    artifact: binaries_signed
    displayName: "Download signed MCP server binaries"

  - pwsh: |
      Write-Host "Verifying binary signing for win-x64 and win-arm64 binaries..."
      $allSigned = $true
      $signedBinaries = Get-ChildItem -Path '$(Pipeline.Workspace)/binaries_signed/**/windows-*' -Recurse -Include @("*.dll", "*.exe")
      foreach ($binary in $signedBinaries) {
          if ((Get-AuthenticodeSignature -FilePath $binary.FullName).Status -ne 'Valid') {
              Write-Host "Binary $($binary.FullName) is NOT signed correctly."
              $allSigned = $false
          }
          else {
              Write-Host "Binary $($binary.FullName) is signed correctly."
          }
      }
      if (-not $allSigned) {
          Write-Error "One or more binaries are not signed correctly."
          exit 1
      }
    displayName: "Verify Binary Signing"

- template: /eng/pipelines/templates/jobs/npm/pack-npm.yml
  parameters:
    DependsOn: Sign

- template: /eng/pipelines/templates/jobs/nuget/pack-and-sign-nuget.yml
  parameters:
    DependsOn: Sign

- template: /eng/pipelines/templates/jobs/vsix/pack-and-sign-vsix.yml
  parameters:
    DependsOn: Sign

- template: /eng/pipelines/templates/jobs/docker/stage-docker.yml
  parameters:
    DependsOn: Sign

- ${{ each os in split('linux|windows|macOS', '|') }}:
  - template: /eng/pipelines/templates/jobs/verify-packages.yml
    parameters:
      OSName: ${{ os }}
      Matrix: stageDependencies.Initialize.Initialize.outputs['CreateBuildInfo.${{ os }}SmokeTestMatrix']
      MaxParallel: 4
      DependsOn:
        - PackNpm
        - PackNuget
      TestTimeoutInMinutes: 10
      ServerName: ${{ parameters.ServerName }}
